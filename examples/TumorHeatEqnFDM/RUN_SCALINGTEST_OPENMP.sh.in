#!/bin/bash
#
# Script for configuring the underlying application.
#
# Copyright (c) 2018, ZIH, TU Dresden, Federal Republic of Germany.
# For details, see the files COPYING and LICENSE in the base directory
# of the package.

# Submit this script with: sbatch RUN_SCALINGTEST_OPENMP.sh
# or use:
# srun -n 1 -N 1 -c 24 --ntasks-per-node=1 --mem-per-cpu=2583 -p haswell64 --exclusive --time=1:10:00 --pty bash -l -i
# ./RUN_SCALINGTEST_OPENMP.sh

#SBATCH --time=01:10:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=24
#SBATCH --partition=haswell64
#SBATCH --mem-per-cpu=2583M
#SBATCH --exclusive
#SBATCH --mail-user=martin.stoeckl@mailbox.tu-dresden.de
#SBATCH --mail-type=END,FAIL
#SBATCH -A p_optim

source ./@top_srcdir@/scripts/load-modules.sh

THREADS="1
2
4
8
12
16
20
24"

export TYPE_OF_TEST="OpenMP"
export SCAFESRUN_N_PROCESSES_MPI_START="1"
export SCAFESRUN_MACHINE_N_TASKS_PER_NODE="1"

for THREAD in $THREADS
do
    export SCAFESRUN_N_THREADS_OPENMP_START="${THREAD}"
    python3 startSimulation.py cases/scalingtest/5A_120x120x10.ini RUN_SCALINGTEST_HELPER.sh
    python3 startSimulation.py cases/scalingtest/7C_120x120x10.ini RUN_SCALINGTEST_HELPER.sh
    python3 startSimulation.py cases/scalingtest/5A_120x120x50.ini RUN_SCALINGTEST_HELPER.sh
    python3 startSimulation.py cases/scalingtest/7C_120x120x50.ini RUN_SCALINGTEST_HELPER.sh
done

exit
